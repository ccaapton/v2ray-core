// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: transport/internet/domainsocket/config.proto

package domainsocket

import (
	proto "github.com/golang/protobuf/proto"
	math "math"
	serial "v2ray.com/core/common/serial"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path of the domain socket. This overrides the IP/Port parameter from
	// upstream caller.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Abstract speicifies whether to use abstract namespace or not.
	// Traditionally Unix domain socket is file system based. Abstract domain socket can be used without acquiring file lock.
	Abstract             bool                 `protobuf:"varint,2,opt,name=abstract,proto3" json:"abstract,omitempty"`
	HeaderSettings       *serial.TypedMessage `protobuf:"bytes,3,opt,name=header_settings,json=headerSettings,proto3" json:"header_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
	// Traditionally Unix domain socket is file system based. Abstract domain
	// socket can be used without acquiring file lock.
	Abstract bool `protobuf:"varint,2,opt,name=abstract,proto3" json:"abstract,omitempty"`
	// Some apps, eg. haproxy, use the full length of sockaddr_un.sun_path to
	// connect(2) or bind(2) when using abstract UDS.
	Padding             bool `protobuf:"varint,3,opt,name=padding,proto3" json:"padding,omitempty"`
	AcceptProxyProtocol bool `protobuf:"varint,4,opt,name=acceptProxyProtocol,proto3" json:"acceptProxyProtocol,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_internet_domainsocket_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_transport_internet_domainsocket_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_transport_internet_domainsocket_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Config) GetAbstract() bool {
	if x != nil {
		return x.Abstract
	}
	return false
}

func (x *Config) GetPadding() bool {
	if x != nil {
		return x.Padding
	}
	return false
}

func (x *Config) GetAcceptProxyProtocol() bool {
	if x != nil {
		return x.AcceptProxyProtocol
	}
	return false
}

<<<<<<< HEAD
func (m *Config) GetHeaderSettings() *serial.TypedMessage {
	if m != nil {
		return m.HeaderSettings
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "v2ray.core.transport.internet.domainsocket.Config")
=======
var File_transport_internet_domainsocket_config_proto protoreflect.FileDescriptor

var file_transport_internet_domainsocket_config_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a,
	0x76, 0x32, 0x72, 0x61, 0x79, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x30, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x42, 0x8f, 0x01, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x32, 0x72, 0x61, 0x79, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x01, 0x5a, 0x2e, 0x76, 0x32, 0x72, 0x61, 0x79, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0xaa, 0x02, 0x2a, 0x56, 0x32, 0x52, 0x61, 0x79, 0x2e, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
>>>>>>> origin/master
}

var (
	file_transport_internet_domainsocket_config_proto_rawDescOnce sync.Once
	file_transport_internet_domainsocket_config_proto_rawDescData = file_transport_internet_domainsocket_config_proto_rawDesc
)

func file_transport_internet_domainsocket_config_proto_rawDescGZIP() []byte {
	file_transport_internet_domainsocket_config_proto_rawDescOnce.Do(func() {
		file_transport_internet_domainsocket_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_internet_domainsocket_config_proto_rawDescData)
	})
	return file_transport_internet_domainsocket_config_proto_rawDescData
}

var file_transport_internet_domainsocket_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_transport_internet_domainsocket_config_proto_goTypes = []interface{}{
	(*Config)(nil), // 0: v2ray.core.transport.internet.domainsocket.Config
}
var file_transport_internet_domainsocket_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

<<<<<<< HEAD
var fileDescriptor_76473d52e3e3815d = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xd0, 0x31, 0x4b, 0xc4, 0x30,
	0x14, 0x07, 0x70, 0x72, 0xca, 0x71, 0x46, 0x51, 0xe8, 0x54, 0x6e, 0x2a, 0x0e, 0x52, 0x6e, 0x48,
	0xa4, 0x8e, 0x6e, 0x9e, 0x8b, 0x83, 0x28, 0xbd, 0xc3, 0xc1, 0xe5, 0xc8, 0xa5, 0xcf, 0x5e, 0xd1,
	0xe4, 0x95, 0x97, 0x87, 0xd0, 0x8f, 0xe0, 0x57, 0xf1, 0x53, 0x4a, 0x5b, 0x5b, 0x8a, 0x93, 0x5b,
	0x1e, 0xfc, 0x7f, 0x79, 0xff, 0x44, 0xde, 0x7e, 0x66, 0x64, 0x1a, 0x65, 0xd1, 0x69, 0x8b, 0x04,
	0x9a, 0xc9, 0xf8, 0x50, 0x23, 0xb1, 0xae, 0x3c, 0x03, 0x79, 0x60, 0x5d, 0xa0, 0x33, 0x95, 0x0f,
	0x68, 0xdf, 0x81, 0xb5, 0x45, 0xff, 0x56, 0x95, 0xaa, 0x26, 0x64, 0x8c, 0x56, 0x03, 0x26, 0x50,
	0x23, 0x54, 0x03, 0x54, 0x53, 0xb8, 0xbc, 0xfe, 0xb3, 0xc8, 0xa2, 0x73, 0xe8, 0x75, 0x00, 0xaa,
	0xcc, 0x87, 0xe6, 0xa6, 0x86, 0x62, 0xe7, 0x20, 0x04, 0x53, 0x42, 0x7f, 0xfb, 0xe5, 0x97, 0x90,
	0xf3, 0x75, 0xb7, 0x2e, 0x8a, 0xe4, 0x71, 0x6d, 0xf8, 0x10, 0x8b, 0x44, 0xa4, 0x27, 0x79, 0x77,
	0x8e, 0x96, 0x72, 0x61, 0xf6, 0x81, 0xc9, 0x58, 0x8e, 0x67, 0x89, 0x48, 0x17, 0xf9, 0x38, 0x47,
	0x4f, 0xf2, 0xe2, 0x00, 0xa6, 0x00, 0xda, 0x05, 0x60, 0xae, 0x7c, 0x19, 0xe2, 0xa3, 0x44, 0xa4,
	0xa7, 0xd9, 0x95, 0x9a, 0x54, 0xee, 0x2b, 0xa8, 0xbe, 0x82, 0xda, 0xb6, 0x15, 0x1e, 0xfb, 0x06,
	0xf9, 0x79, 0xcf, 0x37, 0xbf, 0xfa, 0xce, 0xc9, 0x36, 0xad, 0xfe, 0xff, 0xde, 0x67, 0xf1, 0x7a,
	0x36, 0x9d, 0xbf, 0x67, 0xab, 0x97, 0x2c, 0x37, 0x8d, 0x5a, 0xb7, 0x78, 0x3b, 0xe2, 0x87, 0x01,
	0xdf, 0x77, 0xe1, 0x4d, 0x17, 0xde, 0xcf, 0xbb, 0x1f, 0xb8, 0xf9, 0x09, 0x00, 0x00, 0xff, 0xff,
	0xa7, 0xad, 0x87, 0x75, 0x9e, 0x01, 0x00, 0x00,
=======
func init() { file_transport_internet_domainsocket_config_proto_init() }
func file_transport_internet_domainsocket_config_proto_init() {
	if File_transport_internet_domainsocket_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transport_internet_domainsocket_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_internet_domainsocket_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transport_internet_domainsocket_config_proto_goTypes,
		DependencyIndexes: file_transport_internet_domainsocket_config_proto_depIdxs,
		MessageInfos:      file_transport_internet_domainsocket_config_proto_msgTypes,
	}.Build()
	File_transport_internet_domainsocket_config_proto = out.File
	file_transport_internet_domainsocket_config_proto_rawDesc = nil
	file_transport_internet_domainsocket_config_proto_goTypes = nil
	file_transport_internet_domainsocket_config_proto_depIdxs = nil
>>>>>>> origin/master
}
